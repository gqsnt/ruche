[package]
name = "ruche"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
axum = { version = "0.8.6", optional = true, features = ["macros", "http2"]}
tokio = { workspace = true, optional = true }
tokio-stream = { version = "0.1", optional = true, features = ["sync"] }
tower = { version = "0.5.2", optional = true, features = ["util"] }
tower-http = { version = "0.6.4", features = ["fs", "compression-full"], optional = true }
sqlx = { version = "0.8.6", optional = true, features = ["postgres", "runtime-tokio-rustls", "chrono", "bigdecimal", "uuid"] }
bigdecimal = { version = "0.4", optional = true }
riven = { workspace = true, optional = true }
reqwest = { workspace = true, optional = true, features = ["json", "rustls-tls"] }
dotenv = { version = "0.15", optional = true }
futures = { workspace = true }
chrono = { version = "0.4", optional = true }
tracing = { version = "0.1", optional = true }
memory-serve = { version = "1.2.1", optional = true }
dashmap = {git="https://github.com/gqsnt/dashmap", rev="781f9883c210a13b50141b57b821a359b8db926e", optional = true}
sitemap = {version = "0.4.1", optional = true}
thiserror = {workspace = true, optional = true}
serde={workspace = true, features = ["derive"]}
flate2 = { version = "1.0.35", optional = true }
async-stream = {version = "0.3.6", optional = true}

serde_json = {workspace = true, optional = true}
axum-server = {version = "0.7.1", optional = true, features = ["tls-rustls"]}
axum-h3 = { version = "0.0.4"}
rustls = { version = "0.23.16" , features = ["ring"], optional = true}

bitcode = "0.6.7"
leptos = { git="https://github.com/gqsnt/leptos-bitcode", rev="2edb3af4d5e885fc3a4c14efe5a94fb3b1022b8c",features = ["nightly", "bitcode"] }
leptos_axum = { git="https://github.com/gqsnt/leptos-bitcode", rev="2edb3af4d5e885fc3a4c14efe5a94fb3b1022b8c", optional = true}
leptos_meta ={ git="https://github.com/gqsnt/leptos-bitcode", rev="2edb3af4d5e885fc3a4c14efe5a94fb3b1022b8c"}
leptos_router = { git="https://github.com/gqsnt/leptos-bitcode", rev="2edb3af4d5e885fc3a4c14efe5a94fb3b1022b8c",features = ["nightly"] }
reactive_stores ={git="https://github.com/gqsnt/leptos-bitcode", rev="2edb3af4d5e885fc3a4c14efe5a94fb3b1022b8c"}
reactive_stores_macro = {git="https://github.com/gqsnt/leptos-bitcode", rev="2edb3af4d5e885fc3a4c14efe5a94fb3b1022b8c"}
wasm-bindgen = "0.2.104"
itertools = "0.14.0"
urlencoding = "2"
http = "1.3.1"
console_error_panic_hook = "0.1"
send_wrapper = "0.6.0"
gloo-net = "0.6.0"
common={path="../common"}
log = "0.4.27"
axum-extra = {version = "0.10.3", optional = true}




[features]
hydrate = ["leptos/hydrate"]
ssr = [
    "dep:axum-extra",
    "dep:axum",
    "dep:tokio",
    "dep:tokio-stream",
    "dep:tower",
    "dep:tower-http",
    "dep:leptos_axum",
    "leptos/ssr",
    "leptos_meta/ssr",
    "leptos_router/ssr",
    "dep:tracing",
    "dep:sqlx",
    "dep:riven",
    "dep:async-stream",
    "dep:reqwest",
    "dep:dotenv",
    "dep:chrono",
    "dep:bigdecimal",
    "dep:memory-serve",
    "dep:dashmap",
    "dep:sitemap",
    "dep:thiserror",
    "dep:axum-server",
    "dep:rustls",
    "dep:serde_json",
    "dep:flate2",
    "common/ssr"
]


#[profile.dev]
#rustflags = ["-Awarnings"]


# Defines a size-optimized profile for the WASM bundle in release mode





[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "ruche"

# The Ruche root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The ruche-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <ruche-root>/<ruche-pkg>/app.css
tailwind-input-file = "input.css"
# Assets source dir. All files found here will be copied and synchronized to ruche-root.
# The assets-dir cannot have a sub directory with the same name/path as ruche-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
#ruche-addr = "0.0.0.0:80"
site-addr = "127.0.0.1:3000"

# The port to use for automatic reload monitoring
reload-port = 3001

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the common target
#
# Optional. Can be over-ridden with the command line parameter --common-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the common target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the common target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"


